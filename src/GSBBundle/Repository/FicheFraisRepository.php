<?php

namespace GSBBundle\Repository;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * FicheFraisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FicheFraisRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return array
     */
    public function findAll()
    {
        return parent::findAll(); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $criteria
     * @param array|null $orderBy
     * @return null|object
     */
    public function findOneBy(array $criteria, array $orderBy = null)
    {
        return parent::findOneBy($criteria, $orderBy); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $criteria
     * @param array|null $orderBy
     * @param null $limit
     * @param null $offset
     * @return array
     */
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
    {
        return parent::findBy($criteria, $orderBy, $limit, $offset); // TODO: Change the autogenerated stub
    }

    /**
     * @param mixed $id
     * @param null $lockMode
     * @param null $lockVersion
     * @return null|object
     */
    public function find($id, $lockMode = null, $lockVersion = null)
    {
        return parent::find($id, $lockMode, $lockVersion); // TODO: Change the autogenerated stub
    }


    /**
     * @param $idVisiteur
     * @return array
     */
    public function getLesMoisDisponibles($idUser)
    {
        return $this->createQueryBuilder('fflmd')
                ->select('fflmd.mois')
                ->where('fflmd.idUser =:idUser')
                ->orderBy('fflmd.mois', 'DESC')
                ->setParameter('idUser', $idUser)
                ->getQuery()->getArrayResult();
    }


    /**
     * Retourne les informations d'une fiche de frais d'un visiteur pour un mois donné
     * @param $idUser
     * @param $mois
     * @return mixed
     */
    public function getLesInfosFicheFrais($idUser, $mois){
        return $this->createQueryBuilder('ff')
            ->select('ff.dateModif', 'ff.nbJustificatifs', 'ff.montantValide', 'e.libelle')
            ->innerJoin('ff.etat', 'e')
            ->where('ff.idUser = :idUser')
            ->andWhere('ff.mois = :unMois')
            ->setParameter('idUser', $idUser)
            ->setParameter('unMois', $mois)
            ->getQuery()->getSingleResult();
    }

    /**
     * Modifie l'état et la date de modification d'une fiche de frais
     * Modifie le champ idEtat et met la date de modif à aujourd'hui
     *
     * @param $idUser
     * @param $mois sous la forme aaaamm
     */
    public function majEtatFicheFrais($idUser, $mois, $etat) {

        $fiche = $this->findOneBy(array('idUser' => $idUser,
            'mois' => $mois));
        $fiche->setEtat($etat);
        $fiche->setDateModif(new \DateTime('now'));
        $this->_em->persist($fiche);
        $this->_em->flush();
    }
}
